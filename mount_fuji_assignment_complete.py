# -*- coding: utf-8 -*-
"""Mount_Fuji_Assignment_complete.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/davidproton4u/AI-sampleassng/blob/main/Mount_Fuji_Assignment_complete.ipynb

#Mount Fuji - Assignment
"""

# Creating a function for Mount Fuji
Mount_Fuji = 3776
Thickness = 0.00008

def folds_exceed_height(height=1000, thickness=0.00008):
    if height < thickness:
        return 0
    folded_thickness = 0
    i = 0
    while height > folded_thickness:
        i += 1
        folded_thickness = thickness * 2 ** i
    return i
print(folds_exceed_height(Mount_Fuji, Thickness))

"""#Arbitrary Thickness"""

#Creating a function corresponding to an Arbitrary Thickness
 #This Program is set to allow input from the user of the program
import math
thickness = 0.00008
def num_of_fold(distance):
    num_of_fold = math.log(distance/thickness)/ math.log(2)
    return num_of_fold
num_of_fold = num_of_fold(distance = float(input("Enter the Distance Here: ")))
print("The number of folds for the Paper is: ", round(num_of_fold), "Times")

"""#Closest Non-Sun Star https://imagine.gsfc.nasa.gov/features/cosmic/nearest_star_info.html"""

#Proxima Centuri is the Closest star to earth with a distance of 40,208,000,000,000 km.
import math
thickness = 0.00008
def num_of_fold(distance):
    num_of_folds = math.log(distance/thickness)/ math.log(2)
    return num_of_folds
num_of_folds = num_of_fold(distance = 40208000000000)
print("The number of folds is: ", round(num_of_folds), "times")

"""#Required Paper Length"""

import math

def required_length(number_of_fold, thickness=0.00008):
    length = (math.pi * thickness * (2**number_of_fold + 4) * (2**number_of_fold -1)) / 6
    return int(length)

print(required_length(
    folds_exceed_height(Mount_Fuji, Thickness) #This is from the Previous Function
))

"""#The Length of the paper Needed to Reach the Moon"""

import math
moon = 384400
def required_length(number_of_fold, thickness=0.00008):
    length = (math.pi * thickness * (2**number_of_fold + 4) * (2**number_of_fold -1)) / 6
    return int(length)

print(required_length(
    folds_exceed_height(moon, Thickness) #This is from the Previous Function
))

#Alpha Centauri
alpha_centauri = 39924000000000
def required_length(number_of_fold, thickness=0.00008):
    length = (math.pi * thickness * (2**number_of_fold + 4) * (2**number_of_fold -1)) / 6
    return int(length)

print(required_length(
    folds_exceed_height(alpha_centauri, Thickness) #This is from the Previous Function
))